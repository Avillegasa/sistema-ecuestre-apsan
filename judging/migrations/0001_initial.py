# Generated by Django 4.2.7 on 2025-05-12 03:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import judging.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('competitions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompetitionParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=1, verbose_name='Orden')),
                ('custom_coefficient', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Coeficiente Personalizado')),
                ('custom_max_value', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Valor Máximo Personalizado')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_parameters', to='competitions.competition')),
            ],
            options={
                'verbose_name': 'Parámetro de Competencia',
                'verbose_name_plural': 'Parámetros de Competencia',
                'ordering': ['competition', 'order'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('coefficient', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Coeficiente')),
                ('max_value', models.PositiveSmallIntegerField(default=10, verbose_name='Valor Máximo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parámetro de Evaluación',
                'verbose_name_plural': 'Parámetros de Evaluación',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=1, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Calificación')),
                ('calculated_result', models.DecimalField(decimal_places=1, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Resultado calculado')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comentarios')),
                ('is_edited', models.BooleanField(default=False, verbose_name='Editada')),
                ('edit_reason', models.CharField(blank=True, max_length=200, null=True, verbose_name='Razón de edición')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='competitions.competition')),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to=settings.AUTH_USER_MODEL)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='judging.competitionparameter')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='competitions.participant')),
            ],
            options={
                'verbose_name': 'Calificación',
                'verbose_name_plural': 'Calificaciones',
                'unique_together': {('competition', 'participant', 'judge', 'parameter')},
            },
            bases=(models.Model, judging.models.ScoreExtensionMixin),
        ),
        migrations.CreateModel(
            name='ScoreEdit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_value', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='Valor anterior')),
                ('previous_result', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='Resultado anterior')),
                ('edit_reason', models.CharField(max_length=200, verbose_name='Razón de edición')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_edits', to=settings.AUTH_USER_MODEL)),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edits', to='judging.score')),
            ],
            options={
                'verbose_name': 'Edición de Calificación',
                'verbose_name_plural': 'Ediciones de Calificaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OfflineData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(verbose_name='Datos')),
                ('is_synced', models.BooleanField(default=False, verbose_name='Sincronizado')),
                ('sync_attempts', models.PositiveSmallIntegerField(default=0, verbose_name='Intentos de sincronización')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offline_data', to='competitions.competition')),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offline_data', to=settings.AUTH_USER_MODEL)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offline_data', to='competitions.participant')),
            ],
            options={
                'verbose_name': 'Dato Offline',
                'verbose_name_plural': 'Datos Offline',
            },
        ),
        migrations.CreateModel(
            name='FirebaseSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_sync', models.DateTimeField(auto_now=True, verbose_name='Última sincronización')),
                ('is_synced', models.BooleanField(default=False, verbose_name='Sincronizado')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Mensaje de error')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='firebase_syncs', to='competitions.competition')),
            ],
            options={
                'verbose_name': 'Sincronización Firebase',
                'verbose_name_plural': 'Sincronizaciones Firebase',
            },
        ),
        migrations.AddField(
            model_name='competitionparameter',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='judging.evaluationparameter'),
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Promedio')),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Porcentaje')),
                ('position', models.PositiveSmallIntegerField(verbose_name='Posición')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='competitions.competition')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='competitions.participant')),
            ],
            options={
                'verbose_name': 'Ranking',
                'verbose_name_plural': 'Rankings',
                'ordering': ['competition', 'position'],
                'unique_together': {('competition', 'participant')},
            },
            bases=(models.Model, judging.models.RankingExtensionMixin),
        ),
        migrations.AlterUniqueTogether(
            name='competitionparameter',
            unique_together={('competition', 'parameter')},
        ),
    ]
